service: lambda-member-v5user-skill-sync
provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  role: ${file(./config/${self:provider.stage}.json):LAMBDA_ROLE}
  runtime: nodejs12.x
  memorySize: 256
  timeout: 15
  environment:
   DB_AGGREGATED_SKILLS_STREAM: ${file(./config/${self:provider.stage}.json):DB_AGGREGATED_SKILLS_STREAM}
   DB_ENTERED_SKILLS_STREAM: ${file(./config/${self:provider.stage}.json):DB_ENTERED_SKILLS_STREAM}
   TC_API_URL: ${file(./config/${self:provider.stage}.json):TC_API_URL}
   AUTH0_PROXY_SERVER_URL: ${file(./config/${self:provider.stage}.json):AUTH0_PROXY_SERVER_URL}
   AUTH0_URL: ${file(./config/${self:provider.stage}.json):AUTH0_URL}
   AUTH0_TOPCODER_AUDIENCE: ${file(./config/${self:provider.stage}.json):AUTH0_TOPCODER_AUDIENCE}
   AUTH0_UBAHN_AUDIENCE: ${file(./config/${self:provider.stage}.json):AUTH0_UBAHN_AUDIENCE}
   AUTH0_CLIENT_ID: ${file(./config/${self:provider.stage}.json):AUTH0_CLIENT_ID}
   AUTH0_CLIENT_SECRET: ${file(./config/${self:provider.stage}.json):AUTH0_CLIENT_SECRET}
   UBAHN_API_URL: ${file(./config/${self:provider.stage}.json):UBAHN_API_URL}
   SKILL_PROVIDER_NAME: ${file(./config/${self:provider.stage}.json):SKILL_PROVIDER_NAME}

functions:
 handler:
   handler: index.handle
   name: member-v5user-skill-sync # optional, Deployed Lambda name
   description: member-v5user-skill-sync # The description of your function.
   events:
    - http: ANY /
